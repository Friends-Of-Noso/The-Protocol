{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Table of Contents Chapters Chapter 1: The Hanshake and the Ping-Pong Annexes Annex 1: The Block","title":"Home"},{"location":"#table-of-contents","text":"","title":"Table of Contents"},{"location":"#chapters","text":"Chapter 1: The Hanshake and the Ping-Pong","title":"Chapters"},{"location":"#annexes","text":"Annex 1: The Block","title":"Annexes"},{"location":"annex_01/","text":"Annex 1: The Block The Block Header File: masterpaskalform.pas Line: 171 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: masterpaskalform.pas@e0787b8#171 BlockHeaderData = Packed Record Number : Int64; TimeStart : Int64; TimeEnd : Int64; TimeTotal : integer; TimeLast20 : integer; TrxTotales : integer; Difficult : integer; TargetHash : String[32]; Solution : String[200]; // 180 necessary LastBlockHash : String[32]; NxtBlkDiff : integer; AccountMiner : String[40]; MinerFee : Int64; Reward : Int64; end; Number The number of the block. Type : Integer 16 bits Size : 8 bytes TimeStart The time in Unix timestamp when the block was started Type : Integer 16 bits Size : 8 bytes TimeEnd The time in Unix timestamp when the block was minted/built/finalised Type : Integer 16 bits Size : 8 bytes The Order/Transfer Header File: masterpaskalform.pas Line: 188 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: masterpaskalform.pas@e0787b8#188 OrderData = Packed Record Block : integer; OrderID : String[64]; OrderLines : Integer; OrderType : String[6]; TimeStamp : Int64; Reference : String[64]; TrxLine : integer; Sender : String[120]; // La clave publica de quien envia Address : String[40]; Receiver : String[40]; AmmountFee : Int64; AmmountTrf : Int64; Signature : String[120]; TrfrID : String[64]; end;","title":"Annex 1"},{"location":"annex_01/#annex-1-the-block","text":"","title":"Annex 1: The Block"},{"location":"annex_01/#the-block-header","text":"File: masterpaskalform.pas Line: 171 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: masterpaskalform.pas@e0787b8#171 BlockHeaderData = Packed Record Number : Int64; TimeStart : Int64; TimeEnd : Int64; TimeTotal : integer; TimeLast20 : integer; TrxTotales : integer; Difficult : integer; TargetHash : String[32]; Solution : String[200]; // 180 necessary LastBlockHash : String[32]; NxtBlkDiff : integer; AccountMiner : String[40]; MinerFee : Int64; Reward : Int64; end;","title":"The Block Header"},{"location":"annex_01/#number","text":"The number of the block. Type : Integer 16 bits Size : 8 bytes","title":"Number"},{"location":"annex_01/#timestart","text":"The time in Unix timestamp when the block was started Type : Integer 16 bits Size : 8 bytes","title":"TimeStart"},{"location":"annex_01/#timeend","text":"The time in Unix timestamp when the block was minted/built/finalised Type : Integer 16 bits Size : 8 bytes","title":"TimeEnd"},{"location":"annex_01/#the-ordertransfer-header","text":"File: masterpaskalform.pas Line: 188 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: masterpaskalform.pas@e0787b8#188 OrderData = Packed Record Block : integer; OrderID : String[64]; OrderLines : Integer; OrderType : String[6]; TimeStamp : Int64; Reference : String[64]; TrxLine : integer; Sender : String[120]; // La clave publica de quien envia Address : String[40]; Receiver : String[40]; AmmountFee : Int64; AmmountTrf : Int64; Signature : String[120]; TrfrID : String[64]; end;","title":"The Order/Transfer Header"},{"location":"chapter_01/","text":"Chapter 1: The Handshake and the Ping-Pong Introduction Note: At the end of the chapter there are code snippets and GitHub links The lines in this chapter start with the word PSK and then continue with data. It needs to be conformed that the word PSK is checked. If the first word is ignored, then anything can be the first word. Procedure According to the source code one should send the hello , immediately followed by the ping . The ping should then be sent on a continuous loop of 5 seconds interval. Note Need to find out more about when to expect the pong. This is the data that comes out of a node trying to connect: $ nc -l 8080 PSK 10.42.0.68 0.3.2Ab8 1659944140 PSK 2 0.3.2Ab8 1659944140 $PING 4 69773 6D5FC7634CA132803A480928DBA4AED8 4DB6D1C46E0DD804923167BB807840F3 4 650D27A438E4E3E6264A079BC3EE6A12 3 -1 F35B4 163 00000000052841423044B5C791445E22 0 0B5866B63B12A3A083C72BD4BA4F330E 5EDA6 The first line is the hello. That last line is repeated 3 more times(5 seconds interval), for a total of 15-16 seconds, until the wallet closes the connection due to perceived inactivity. The Hello This is a space separated string with the following data/fields: The string PSK The target IP address: String The version of the software, 0.3.2Ab8 at this moment: String The current UTC Unix timestamp: Integer Format string: \"PSK %s %s %d\" The Ping This is a space separated string with the following data/fields: The string PSK The current protocol version 2 : Integer The version of the software, 0.3.2Ab8 at this moment: String The current UTC Unix timestamp: Integer The string $PING : String The current amount of connections: Integer The current block number(Default: 0): Integer The current block hash(Default: 4E8A4743AA6083F3833DDA1216FE3717): String The hash of the NOSODATA/sumary.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of pending orders(Default: 0): Integer The hash of the NOSODATA/blchhead.nos file(Default: D41D8CD98F00B204E9800998ECF8427E ??): String Status of the connection: Integer 0: Disconnected 1: Connecting 2: Connected 3: Updated Connection port(Default: 8080): Integer Hash of the NOSODATA/masternodes.txt file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of Master Nodes(Default: 0): Integer NMsData difference(Need to ask what this means)(Default: ??): String The amount of checked Master Nodes(Default: 0): Integer Hash of the NOSODATA/gvts.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String First five characters of the hash of the CFGs(Need to ask what this means)(Default: D41D8 ??): String Format string: \"PSK %d %s %d $PING %d %d %s %s %d %s %d %d %s %d %s %d %s %s\" The Pong This is a space separated string with the following data/fields: The string PSK The current protocol version 2 : Integer The version of the software, 0.3.2Ab8 at this moment: String The current UTC Unix timestamp: Integer The string $PONG : String The current amount of connections: Integer The current block number(Default: 0): Integer The current block hash(Default: 4E8A4743AA6083F3833DDA1216FE3717): String The hash of the NOSODATA/sumary.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of pending orders(Default: 0): Integer The hash of the NOSODATA/blchhead.nos file(Default: D41D8CD98F00B204E9800998ECF8427E ??): String Status of the connection: Integer 0: Disconnected 1: Connecting 2: Connected 3: Updated Connection port(Default: 8080): Integer Hash of the NOSODATA/masternodes.txt file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of Master Nodes(Default: 0): Integer NMsData difference(Need to ask what this means)(Default: ??): String The amount of checked Master Nodes(Default: 0): Integer Hash of the NOSODATA/gvts.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String First five characters of the hash of the CFGs(Need to ask what this means)(Default: D41D8 ??): String Format string: \"PSK %d %s %d $PONG %d %d %s %s %d %s %d %d %s %d %s %d %s %s\" Code and Links File: mpred.pas Function: ConnectClient Line: 491 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: mpred.pas@e0787b8#491 function ConnectClient(Address,Port:String):integer; {...} CanalCliente[Slot].IOHandler.WriteLn('PSK '+Address+' '+ProgramVersion+subversion+' '+UTCTime); CanalCliente[Slot].IOHandler.WriteLn(ProtocolLine(3)); // Send PING {...} File: mpprotocol.pas Function: ProtocolLine Line: 186 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: mpprotocol.pas@e0787b8#186 Function ProtocolLine(tipo:integer):String; {...} if tipo = Ping then Resultado := '$PING '+GetPingString; if tipo = Pong then Resultado := '$PONG '+GetPingString; {...} File: mpprotocol.pas Function: GetPingString Line: 513 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: mpprotocol.pas@e0787b8#513 function GetPingString():string; {...} result :=IntToStr(GetTotalConexiones())+' '+ IntToStr(MyLastBlock)+' '+ MyLastBlockHash+' '+ MySumarioHash+' '+ GetPendingCount.ToString+' '+ MyResumenHash+' '+ IntToStr(MyConStatus)+' '+ IntToStr(port)+' '+ copy(MyMNsHash,0,5)+' '+ IntToStr(GetMNsListLength)+' '+ GetNMSData.Diff+' '+ GetMNsChecksCount.ToString+' '+ MyGVTsHash+' '+ Copy(HashMD5String(GetNosoCFG),0,5); {...}","title":"Chapter 1"},{"location":"chapter_01/#chapter-1-the-handshake-and-the-ping-pong","text":"","title":"Chapter 1: The Handshake and the Ping-Pong"},{"location":"chapter_01/#introduction","text":"Note: At the end of the chapter there are code snippets and GitHub links The lines in this chapter start with the word PSK and then continue with data. It needs to be conformed that the word PSK is checked. If the first word is ignored, then anything can be the first word.","title":"Introduction"},{"location":"chapter_01/#procedure","text":"According to the source code one should send the hello , immediately followed by the ping . The ping should then be sent on a continuous loop of 5 seconds interval. Note Need to find out more about when to expect the pong. This is the data that comes out of a node trying to connect: $ nc -l 8080 PSK 10.42.0.68 0.3.2Ab8 1659944140 PSK 2 0.3.2Ab8 1659944140 $PING 4 69773 6D5FC7634CA132803A480928DBA4AED8 4DB6D1C46E0DD804923167BB807840F3 4 650D27A438E4E3E6264A079BC3EE6A12 3 -1 F35B4 163 00000000052841423044B5C791445E22 0 0B5866B63B12A3A083C72BD4BA4F330E 5EDA6 The first line is the hello. That last line is repeated 3 more times(5 seconds interval), for a total of 15-16 seconds, until the wallet closes the connection due to perceived inactivity.","title":"Procedure"},{"location":"chapter_01/#the-hello","text":"This is a space separated string with the following data/fields: The string PSK The target IP address: String The version of the software, 0.3.2Ab8 at this moment: String The current UTC Unix timestamp: Integer Format string: \"PSK %s %s %d\"","title":"The Hello"},{"location":"chapter_01/#the-ping","text":"This is a space separated string with the following data/fields: The string PSK The current protocol version 2 : Integer The version of the software, 0.3.2Ab8 at this moment: String The current UTC Unix timestamp: Integer The string $PING : String The current amount of connections: Integer The current block number(Default: 0): Integer The current block hash(Default: 4E8A4743AA6083F3833DDA1216FE3717): String The hash of the NOSODATA/sumary.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of pending orders(Default: 0): Integer The hash of the NOSODATA/blchhead.nos file(Default: D41D8CD98F00B204E9800998ECF8427E ??): String Status of the connection: Integer 0: Disconnected 1: Connecting 2: Connected 3: Updated Connection port(Default: 8080): Integer Hash of the NOSODATA/masternodes.txt file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of Master Nodes(Default: 0): Integer NMsData difference(Need to ask what this means)(Default: ??): String The amount of checked Master Nodes(Default: 0): Integer Hash of the NOSODATA/gvts.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String First five characters of the hash of the CFGs(Need to ask what this means)(Default: D41D8 ??): String Format string: \"PSK %d %s %d $PING %d %d %s %s %d %s %d %d %s %d %s %d %s %s\"","title":"The Ping"},{"location":"chapter_01/#the-pong","text":"This is a space separated string with the following data/fields: The string PSK The current protocol version 2 : Integer The version of the software, 0.3.2Ab8 at this moment: String The current UTC Unix timestamp: Integer The string $PONG : String The current amount of connections: Integer The current block number(Default: 0): Integer The current block hash(Default: 4E8A4743AA6083F3833DDA1216FE3717): String The hash of the NOSODATA/sumary.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of pending orders(Default: 0): Integer The hash of the NOSODATA/blchhead.nos file(Default: D41D8CD98F00B204E9800998ECF8427E ??): String Status of the connection: Integer 0: Disconnected 1: Connecting 2: Connected 3: Updated Connection port(Default: 8080): Integer Hash of the NOSODATA/masternodes.txt file(Default: D41D8CD98F00B204E9800998ECF8427E): String The amount of Master Nodes(Default: 0): Integer NMsData difference(Need to ask what this means)(Default: ??): String The amount of checked Master Nodes(Default: 0): Integer Hash of the NOSODATA/gvts.psk file(Default: D41D8CD98F00B204E9800998ECF8427E): String First five characters of the hash of the CFGs(Need to ask what this means)(Default: D41D8 ??): String Format string: \"PSK %d %s %d $PONG %d %d %s %s %d %s %d %d %s %d %s %d %s %s\"","title":"The Pong"},{"location":"chapter_01/#code-and-links","text":"File: mpred.pas Function: ConnectClient Line: 491 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: mpred.pas@e0787b8#491 function ConnectClient(Address,Port:String):integer; {...} CanalCliente[Slot].IOHandler.WriteLn('PSK '+Address+' '+ProgramVersion+subversion+' '+UTCTime); CanalCliente[Slot].IOHandler.WriteLn(ProtocolLine(3)); // Send PING {...} File: mpprotocol.pas Function: ProtocolLine Line: 186 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: mpprotocol.pas@e0787b8#186 Function ProtocolLine(tipo:integer):String; {...} if tipo = Ping then Resultado := '$PING '+GetPingString; if tipo = Pong then Resultado := '$PONG '+GetPingString; {...} File: mpprotocol.pas Function: GetPingString Line: 513 Commit: e0787b818f3b637971f027480d29a3538b2599b8 Link: mpprotocol.pas@e0787b8#513 function GetPingString():string; {...} result :=IntToStr(GetTotalConexiones())+' '+ IntToStr(MyLastBlock)+' '+ MyLastBlockHash+' '+ MySumarioHash+' '+ GetPendingCount.ToString+' '+ MyResumenHash+' '+ IntToStr(MyConStatus)+' '+ IntToStr(port)+' '+ copy(MyMNsHash,0,5)+' '+ IntToStr(GetMNsListLength)+' '+ GetNMSData.Diff+' '+ GetMNsChecksCount.ToString+' '+ MyGVTsHash+' '+ Copy(HashMD5String(GetNosoCFG),0,5); {...}","title":"Code and Links"}]}